name: 🚀 NuGet Package CI/CD

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发 (如 v1.0.0, v1.2.3)
  workflow_dispatch:  # 允许手动触发
    inputs:
      version:
        description: '版本号 (如: 1.0.0)'
        required: true
        default: '1.0.0'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'EasyCodeBuilder/EasyCodeBuilder.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: 🔨 Build project
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore
      
    - name: 🧪 Run tests (if exists)
      run: |
        if [ -d "tests" ] || [ -d "test" ] || [ -d "Tests" ] || [ -d "Test" ]; then
          echo "Running tests..."
          dotnet test --configuration Release --no-build --verbosity normal
        else
          echo "No test projects found, skipping tests"
        fi
      
  publish:
    name: 📦 Publish to NuGet
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 🏷️ Get version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/v}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"
        
    - name: 📝 Update project version
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.version.outputs.VERSION }}<\/Version>/g" ${{ env.PROJECT_PATH }}
        echo "Updated project version to ${{ steps.version.outputs.VERSION }}"
        
    - name: 📦 Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: 🔨 Build project
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore
      
    - name: 📦 Create NuGet package
      run: |
        dotnet pack ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
          
    - name: 📋 List generated packages
      run: ls -la ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
      
    - name: 🚀 Publish package to NuGet
      run: |
        dotnet nuget push "${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg" \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source ${{ env.NUGET_SOURCE_URL }} \
          --skip-duplicate
          
    - name: 📸 Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg
        
    - name: 🎉 Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## 🚀 Release ${{ steps.version.outputs.VERSION }}
          
          ### 📦 NuGet Package
          - **Package**: [Fengb3.EasyCodeBuilder](https://www.nuget.org/packages/Fengb3.EasyCodeBuilder/)
          - **Version**: ${{ steps.version.outputs.VERSION }}
          
          ### 📥 Installation
          ```bash
          dotnet add package Fengb3.EasyCodeBuilder --version ${{ steps.version.outputs.VERSION }}
          ```
          
          ### 🔗 Links
          - [NuGet Package](https://www.nuget.org/packages/Fengb3.EasyCodeBuilder/${{ steps.version.outputs.VERSION }})
          - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
          
          ---
          *This release was automatically generated by GitHub Actions* 🤖
        draft: false
        prerelease: false 